# -*- coding: utf-8 -*-\n# @Time    : 2024/1/17 \:52:28\n# @Author  : sudoskys\n# @File    : test_detect.py\n# @Software: PyCharm\n\ndef test_muti_detect():\n    """\n    Test the detect_multilingual function with multiple languages and low_memory option.\n    """\n    from fast_langdetect import detect_multilingual\n    result = detect_multilingual("Hello, world!你好世界!Привет, мир!", low_memory=True)\n    assert isinstance(result, list), "Result should be a list"\n    assert any(item.get("lang") == "en" for item in result), "English not detected"\n    assert any(item.get("lang") == "zh" for item in result), "Chinese not detected"\n    assert any(item.get("lang") == "ru" for item in result), "Russian not detected"\n\ndef test_detect():\n    """\n    Test the detect function with single languages.\n    """\n    from fast_langdetect import detect    \\n    assert detect("hello world")["lang"] == "en", "ft_detect error"\n    assert detect("你好世界")["lang"] == "zh", "ft_detect error"\n    assert detect("こんにちは世界")["lang"] == "ja", "ft_detect error"\n    assert detect("안녕하세요 세계")["lang"] == "ko", "ft_detect error"\n    assert detect("Bonjour le monde")["lang"] == "fr", "ft_detect error"\n    assert detect("Hallo Welt")["lang"] == "de", "ft_detect error"\n    assert detect("Hola mundo")["lang"] == "es", "ft_detect error"\n    assert detect("これらの機関主催のコース、多以基本コンピュータ使用を主に、例えば文書処理、日本語入力、インターネットアプリケーションなど") == "ja", "ft_detect error"\n    assert detect("이러한 기관이 주최하는 과정들은 일반적으로 기본 컴퓨터 사용을 중점으로 하며, 예를 들어 문서 처리, 한국어 입력, 인터넷 애플리케이션 등") == "ko", "ft_detect error"\n    assert detect("Ces institutions organisent souvent des cours ax\u00e9s sur l'utilisation de base de l'informatique, par exemple le traitement de texte, la saisie en fran\u00e7ais, les applications internet, etc.") == "fr", "ft_detect error"\n    assert detect("Diese Einrichtungen bieten oft Kurse, die auf die grundlegende Computernutzung abzielen, zum Beispiel Textverarbeitung, deutsche Eingabe, Internetanwendungen usw.") == "de", "ft_detect error"\n    assert detect("Estas instituciones suelen ofrecer cursos centrados en el uso b\u00e1sico de la computadora, por ejemplo, procesamiento de textos, entrada en espa\u00f1ol, aplicaciones de internet, etc.") == "es", "ft_detect error"\n    assert detect("這些機構主辦的課程，多以基本電腦使用為主，例如文書處理、中文輸入、互聯網應用等") == "zh", "ft_detect error"\n\ndef test_detect_totally():\n    """\n    Test the detect_language function with single languages.\n    """\n    from fast_langdetect import detect_language    \\)n    assert detect_language("hello world") == "en", "ft_detect error"\n    assert detect_language("你好世界") == "zh", "ft_detect error"\n    assert detect_language("こんにちは世界") == "ja", "ft_detect error"\n    assert detect_language("안녕하세요 세계") == "ko", "ft_detect error"\n    assert detect_language("Bonjour le monde") == "fr", "ft_detect error"\n    assert detect_language("Hallo Welt") == "de", "ft_detect error"\n    assert detect_language("Hola mundo") == "es", "ft_detect error"\n    assert detect_language("これらの機関主催のコース、多以基本コンピュータ使用を主に、例えば文書処리、日本語入力、インターネットアプリケーションなど") == "ja", "ft_detect error"\n    assert detect_language("이러한 기관이 주최하는 과정들은 일반적으로 기본 컴퓨터 사용을 중점으로 하며, 예를 들어 문서 처리, 한국어 입력, 인터넷 애플리케이션 등") == "ko", "ft_detect error"\n    assert detect_language("Ces institutions organisent souvent des cours ax\u00e9s sur l'utilisation de base de l'informatique, par exemple le traitement de texte, la saisie en fran\u00e7ais, les applications internet, etc.") == "fr", "ft_detect error"\n    assert detect_language("Diese Einrichtungen bieten oft Kurse, die auf die grundlegende Computernutzung abzielen, zum Beispiel Textverarbeitung, deutsche Eingabe, Internetanwendungen usw.") == "de", "ft_detect error"\n    assert detect_language("Estas instituciones suelen ofrecer cursos centrados en el uso b\u00e1sico de la computadora, por ejemplo, procesamiento de textos, entrada en espa\u00f1ol, aplicaciones de internet, etc.") == "es", "ft_detect error"\n    assert detect_language("這些機構主辦的課程，多以基本電腦使用為主，例如文書處理、中文輸入、互聯網應用等") == "zh", "ft_detect error"\n\ndef test_failed_example():\n    """\n    Test the detect function with invalid input to ensure it handles exceptions.\n    """\n    from fast_langdetect import detect    \\)n    try:\n        detect("")\n    except Exception as e:\n        assert str(e) == "No language detected", "ft_detect error"\